<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--namespace，用于指定当前文件和哪个接口进行映射， 需要对应指定mapper的包的完整路径-->
<mapper namespace="com.cy.store.mapper.UserMapper">
<!--    自定义映射规则：resultMap 标签来完成映射规则的定义
        id: 分配唯一的id值，
        type: 取值是一个类，表示的是数据库中的查询结果与java中哪个实体类进行结果集的映射-->
    <resultMap id="UserEntityMap" type="com.cy.store.entity.User">
<!--        将表的资源和类的输赢不一致的字段进行匹配指定，名称一直的字段可以省略不写-->
<!--
            column: 表示表中的资源名称
            property:表示类中的属性名称
-->
<!--        定义映射规则时，主键的映射必须写上，不管是否一致-->
        <id column="uid" property="uid"/>
        <result column="is_delete" property="isDelete"/>
        <result column="created_user" property="createdUser"/>
        <result column="created_time" property="createdTime"/>
        <result column="modified_user" property="modifiedUser"/>
        <result column="modified_time" property="modifiedTime"/>
    </resultMap>


<!--    id属性，表示映射的接口方法的名称，直接在标签的内容来编写sql语句-->
<!--    useGeneratedKeys : 开启某个字段的值递增
        keyProperty ：标签将表中的哪个字段作为主键进行递增-->
    <insert id="insert" useGeneratedKeys="true" keyProperty="uid">
        INSERT INTO
            t_user (username, password, salt, phone, email, gender, avatar, is_delete, created_user, created_time, modified_user, modified_time)
        VALUES
            (#{username}, #{password}, #{salt}, #{phone}, #{email}, #{gender}, #{avatar}, #{isDelete}, #{createdUser}, #{createdTime}, #{modifiedUser}, #{modifiedTime})
    </insert>

    <!-- 根据用户名查询用户数据：User findByUsername(String username) -->
<!--    resultType：表示查询的结果集类型，只需要指定对应映射类的类型，并包含完整包接口：-->
<!--    resultMap: 表示当表的资源和累的对象属性的字段名称不一致是，来自定义查询结果集的映射规则-->
    <select id="findByUsername" resultMap="UserEntityMap">
        SELECT
            *
        FROM
            t_user
        WHERE
            username = #{username}
    </select>

</mapper>